- name: update apt cache
  apt: update_cache=yes cache_valid_time=3600

- name: install packages
  apt: name={{ item }}
  with_items:
    - autoconf
    - git
    - curl
    - bison
    - imagemagick
    - libmagickwand-dev
    - build-essential
    - libssl-dev
    - libreadline-dev
    - libyaml-dev
    - libpq-dev
    - zlib1g-dev
    - libffi-dev
    - libssh2-1
    - libssh2-1-dev
    - libgpg-error-dev
    - python-software-properties
    - cmake

- name: add redmine group
  group: name=redmine system=yes

- name: add redmine user
  user: name=redmine shell=/bin/bash home=/opt/redmine group=redmine system=yes

- name: clone rbenv
  git: repo=git://github.com/sstephenson/rbenv.git accept_hostkey=yes dest=/opt/redmine/.rbenv version=master
  sudo_user: redmine

- name: clone ruby-build
  git: repo=git://github.com/sstephenson/ruby-build.git accept_hostkey=yes dest=/opt/redmine/.rbenv/plugins/ruby-build version=master
  sudo_user: redmine

- name: add rbenv to $PATH
  shell: echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
  sudo_user: redmine

- name: add rbenv initialization to .bash_profile
  shell: echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
  sudo_user: redmine

- name: install ruby 2.2.1
  shell: rbenv install -f 2.2.1
  sudo_user: redmine

- name: set as global ruby 2.2.1
  shell: rbenv global 2.2.1
  sudo_user: redmine

- name: clone redmine 3.0-stable
  git: repo=https://github.com/redmine/redmine.git accept_hostkey=yes dest=/opt/redmine/redmine version=3.0-stable
  sudo_user: redmine

- name: set true rights
  file: path=/opt/redmine/redmine/{{ item.path }} owner=redmine group=redmine mode=0755 recurse=yes state=directory
  with_items:
    - { path: 'tmp' }
    - { path: 'tmp/pids' }
    - { path: 'tmp/sockets' }
    - { path: 'public/plugin_assets' }
    - { path: 'files' }
    - { path: 'log' }

- name: copy puma config
  template: src=config/puma.rb dest=/opt/redmine/redmine/config/puma.rb owner=redmine group=redmine mode=0600

- name: copy database config
  template: src=config/database.postgresql.yml dest=/opt/redmine/redmine/config/database.yml owner=redmine group=redmine mode=0600

- name: install gems
  shell: 'echo "gem: --no-ri --no-rdoc" >> ~/.gemrc'
  sudo_user: redmine
- shell: echo "# Gemfile.local\ngem 'puma'" >> ~/redmine/Gemfile.local
  sudo_user: redmine
- shell: gem install bundler
  sudo_user: redmine
- shell: rbenv rehash
  sudo_user: redmine
- shell: cd ~/redmine && bundle install --without development test
  sudo_user: redmine

- name: generate token and prepare database
  shell: cd ~/redmine && rake generate_secret_token && RAILS_ENV=production rake db:migrate && RAILS_ENV=production REDMINE_LANG=en rake redmine:load_default_data
  sudo_user: redmine

- name: copy redmine init script
  template: src=init.d/redmine dest=/etc/init.d/redmine mode=0755

- name: add redmine service
  shell: update-rc.d redmine defaults

- name: start redmine service
  service: name=redmine enabled=yes state=started

- name: stop redmine service
  service: name=redmine state=stopped

- name: clone bootstrap kit 0.2.2
  git: repo=https://github.com/jbox-web/redmine_bootstrap_kit.git accept_hostkey=yes dest=~/redmine/plugins/redmine_bootstrap_kit version=0.2.2
  sudo_user: redmine

- name: clone git hosting plugin 1.0.2
  git: repo=https://github.com/jbox-web/redmine_git_hosting.git accept_hostkey=yes dest=~/redmine/plugins/redmine_git_hosting version=1.0.2
  sudo_user: redmine

- name: install plugin gems
  shell: cd ~/redmine && bundle install --without development test
  sudo_user: redmine

- name: migrate database
  shell: cd ~/redmine && bundle exec rake redmine:plugins:migrate RAILS_ENV=production NAME=redmine_git_hosting
  sudo_user: redmine

- name: make directory ~/redmine/plugins/redmine_git_hosting/ssh_keys
  file: path=~/redmine/plugins/redmine_git_hosting/ssh_keys state=directory mode=0700
  sudo_user: redmine

- name: generate redmine_gitolite_admin_id_rsa
  shell: "{{ item }}"
  with_items:
    - 'rm -f ~/redmine/plugins/redmine_git_hosting/ssh_keys/redmine_gitolite_admin_id_*'
    - 'ssh-keygen -q -t rsa -f ~/redmine/plugins/redmine_git_hosting/ssh_keys/redmine_gitolite_admin_id_rsa -N ""'
  sudo_user: redmine

- name: generate /etc/ssh/ssh_host_ed25519_key
  shell: ssh-keygen -A

- name: add git group
  group: name=git system=yes

- name: add git user
  user: name=git shell=/bin/bash home=/home/git group=git system=yes

- name: make directory /home/git/bin
  file: path=/home/git/bin owner=git group=git mode=0700 state=directory

- name: copy public key for gitolite-admin
  shell: cp /opt/redmine/redmine/plugins/redmine_git_hosting/ssh_keys/redmine_gitolite_admin_id_rsa.pub /home/git/redmine_gitolite_admin_id_rsa.pub

- name: set true rights to /home/git/redmine_gitolite_admin_id_rsa.pub
  file: path=/home/git/redmine_gitolite_admin_id_rsa.pub owner=git group=git mode=0600

- name: clone gitolite v3.6.2
  git: repo=git://github.com/sitaramc/gitolite accept_hostkey=yes dest=~/gitolite version=v3.6.2
  sudo_user: git

- name: setup gitolite
  shell: gitolite/install -to $HOME/bin && gitolite setup -pk $HOME/redmine_gitolite_admin_id_rsa.pub
  sudo_user: git

- name: remove public key for gitolite-admin
  file: path=~/redmine_gitolite_admin_id_rsa.pub state=absent
  sudo_user: git

- name: gitolite must accept hook keys
  lineinfile: dest=~/.gitolite.rc regexp="{{ item.from }}" line="{{ item.to }}"
  with_items:
    - { from: '^\s*GIT_CONFIG_KEYS\s*=>', to: "GIT_CONFIG_KEYS => '.*'," }
    - { from: '^.*LOCAL_CODE\s*=>', to: 'LOCAL_CODE => \"$ENV{HOME}/local\",' }
  sudo_user: git

- name: configure sudo
  file: path=/etc/sudoers.d/redmine mode=0440 state=touch
- lineinfile: dest=/etc/sudoers.d/redmine line="{{ item }}" validate='visudo -cf %s'
  with_items:
    - "Defaults:redmine !requiretty"
    - "redmine ALL=(git) NOPASSWD:ALL"

- name: make /opt/redmine/.ssh directory
  file: path=/opt/redmine/.ssh mode=0700 state=directory
  sudo_user: redmine

- name: make /opt/redmine/.ssh/known_hosts file
  file: path=/opt/redmine/.ssh/known_hosts mode=0600 state=touch
  sudo_user: redmine

- name: add localhost to redmine user known_hosts
  shell: "{{ item }}"
  with_items:
    - 'ssh-keygen -R localhost'
    - 'ssh-keyscan -H -t rsa localhost >> ~/.ssh/known_hosts'
  sudo_user: redmine

- name: start redmine service
  service: name=redmine enabled=yes state=started