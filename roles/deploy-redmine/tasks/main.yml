- name: add nginx apt-key
  apt_key: url=http://nginx.org/keys/nginx_signing.key state=present

- name: add nginx repo
  apt_repository: repo='deb http://nginx.org/packages/ubuntu/ trusty nginx' state=present

- name: add nginx repo src
  apt_repository: repo='deb-src http://nginx.org/packages/ubuntu/ trusty nginx' state=present

- name: update apt cache
  apt: update_cache=yes cache_valid_time=3600

- name: install packages
  apt: name={{ item }}
  with_items:
    - autoconf
    - git
    - curl
    - bison
    - imagemagick
    - libmagickwand-dev
    - build-essential
    - libssl-dev
    - libreadline-dev
    - libyaml-dev
    - libpq-dev
    - zlib1g-dev
    - python-software-properties
    - nginx

- name: check nginx service
  service: name=nginx enabled=yes state=started

- name: remove standart nginx configuration
  shell: rm -f /etc/nginx/conf.d/*.conf

- name: restart nginx service
  service: name=nginx state=restarted

- name: add redmine group
  group: name=redmine system=yes

- name: add redmine user
  user: name=redmine shell=/bin/bash home=/opt/redmine group=redmine system=yes

- name: clone rbenv
  git: repo=git://github.com/sstephenson/rbenv.git accept_hostkey=yes dest=/opt/redmine/.rbenv version=master

- name: clone ruby-build
  git: repo=git://github.com/sstephenson/ruby-build.git accept_hostkey=yes dest=/opt/redmine/.rbenv/plugins/ruby-build version=master

- name: set owner and group for .rbenv directory
  file: path=/opt/redmine/.rbenv recurse=yes owner=redmine group=redmine

- name: add rbenv to $PATH
  shell: echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
  sudo_user: redmine

- name: add rbenv initialization to .bash_profile
  shell: echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
  sudo_user: redmine

- name: install ruby 2.1.2
  shell: rbenv install -f 2.1.2
  sudo_user: redmine

- name: set as global ruby 2.1.2
  shell: rbenv global 2.1.2
  sudo_user: redmine

- name: clone redmine 2.6-stable
  git: repo=https://github.com/redmine/redmine.git accept_hostkey=yes dest=/opt/redmine/redmine version=2.6-stable
  sudo_user: redmine

- name: set true rights
  file: path=/opt/redmine/redmine/{{ item.path }} owner=redmine group=redmine mode=0755 recurse=yes state=directory
  with_items:
    - { path: 'tmp' }
    - { path: 'tmp/pids' }
    - { path: 'tmp/sockets' }
    - { path: 'public/plugin_assets' }
    - { path: 'files' }
    - { path: 'log' }

- name: copy puma config
  template: src=config/puma.rb dest=/opt/redmine/redmine/config/puma.rb owner=redmine group=redmine mode=0600

- name: copy database config
  template: src=config/database.postgresql.yml dest=/opt/redmine/redmine/config/database.yml owner=redmine group=redmine mode=0600

- name: install gems
  shell: 'echo "gem: --no-ri --no-rdoc" >> ~/.gemrc'
  sudo_user: redmine
- shell: echo "# Gemfile.local\ngem 'puma'" >> ~/redmine/Gemfile.local
  sudo_user: redmine
- shell: gem install bundler
  sudo_user: redmine
- shell: rbenv rehash
  sudo_user: redmine
- shell: cd ~/redmine && bundle install --without development test
  sudo_user: redmine

- name: generate token and prepare database
  shell: cd ~/redmine && rake generate_secret_token
  sudo_user: redmine
- shell: cd ~/redmine && RAILS_ENV=production rake db:migrate
  sudo_user: redmine
- shell: cd ~/redmine && RAILS_ENV=production rake redmine:load_default_data
  sudo_user: redmine

- name: copy redmine nginx config
  template: src=nginx/conf.d/redmine.conf dest=/etc/nginx/conf.d/redmine.comf mode=0644

- name: restart nginx service
  service: name=nginx state=restarted

- name: copy redmine init script
  template: src=init.d/redmine dest=/etc/init.d/redmine mode=0755

- name: add redmine service
  shell: update-rc.d redmine defaults

- name: start redmine service
  service: name=redmine enabled=yes state=started